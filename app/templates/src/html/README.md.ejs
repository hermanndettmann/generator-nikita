# the static-page-generator based on twig

This folder provides an static-page-generator based on twig.js. It aims to be an alternative to assemble.io.
See the [twig documentation](http://twig.sensiolabs.org/documentation) and the [twig intro for designers](http://twig.sensiolabs.org/doc/templates.html) if you wonder how twig is working in general.
You can add custom twig functions, filters and tags in the grunt config file at `grunt/config/twigRender.js`.
See the [grunt-twig-render documentation](https://github.com/stefanullinger/grunt-twig-render) for examples.
Also, you find a list of supported twig features in the [twig.js wiki](https://github.com/twigjs/twig.js/wiki).


## the pages-folder

Put all your page templates in here.
Every `.twig` file will result in a `.html` file after build.


## the layouts-folder

Put all your layout skeleton files in here.
You can decorate a page using twigs `extends` tag in a page template like this:

```
{% extends '@layouts/master.twig' %}
```


## the partials-folder

Put all your partials in here.
You can use a partial in a page using twigs `import`, `embed` and `use` tags:

```
{% include '@partials/gitinfos.twig' %}
```


## the macros-folder

Put all your twig macro files in here.
You can import them in a page or a partial using twigs `import` tag:

```
{% include '@macros/mymacro.twig' %}
```


## the data-folder

Put your json or yaml data files in here.
Include them in any template with the custom twig `data` function to set a variable with its content: 

```
{% set mydata = data('@data/data.json') %}
```
